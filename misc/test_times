#!/usr/bin/python
# -*- coding: utf-8 -*-

import socket
import ps_util as PU
import sys
from time import time,sleep

stdout = open('/tmp/bendlog-%s' % time(),'w')

def w(*args,**kwargs):
  sep = kwargs.get('sep', ' ')
  txt = sep.join(map(str,args))
  stdout.write(txt)
  stdout.flush()
  print txt,
  sys.stdout.flush()

sok = PU.FriendlySocket()
sok.timeout = 3

def cmd(c):
  txt = c+'\r'
  # w(c+'\n')
  # stdout.flush()
  sok.write(txt)
  r =  sok.readline().strip()
  # w(r)
  # stdout.flush()
  return r

def wait_until_state(x):
    last_t = start_t = time()
    last = cmd('STC/')
    w(last)
    while True:
        r = cmd('STC/')
        s = int(r[-4:],16)
        if last!=r:
          w(' --> '+r + ' (%.2f)' % (time()-last_t) )
          last = r
        if s==x:
          w('\n')
          return time()-start_t

def ps_on():
  w('switching power supply on...\n')
  cmd('PRT=19')
  cmd('DCP=3')
  cmd('PRT=0')
  return wait_until_state(0x0a)

def ps_off():
  w('switching power supply off...\n')
  cmd('PRT=19')
  cmd('DCP=2')
  sleep(1)
  cmd('PRT=0')
  return wait_until_state(0x03)

def cab_off():
  w('switching cabinet off...\n')
  cmd('PRT=19')
  cmd('DCP=0')
  t = wait_until_state(0x01)
  return t

def cab_on():
  w('switching cabinet on...\n')
  cmd('PRT=19')
  cmd('DCP=1')
  t = wait_until_state(0x06)
  return t



def main():
  try:
    sok.connect('dpcbo15b01', 3701)
    t = ps_on()
    w('ps on : %s\n' % t)
    t = ps_on()
    w('ps on : %s\n' % t)
    t = ps_off()
    w('ps off: %s\n\n' % t)
    t = ps_off()
    w('ps off: %s\n\n' % t)

    t = cab_off()
    w('cab off %s\n' % t )

    t = cab_on()
    w('cab on %s\n\n'  % t)

    t = ps_on()
    w('ps on %s\n' % t)
    t = ps_off()
    w('ps off %s\n' % t)

  finally:
    sok.disconnect_exc()

main()